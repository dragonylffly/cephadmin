#!/bin/bash

if [ m$1 = m"run" ]; then
	echo "mmm" >> /var/log/ceph/ceph-osd.0.log
	cmd=""
	m=0
	for var in $*
	do
		if [ $m != 0 ]; then
			cmd="$cmd$var "
		fi
		m=$m+1
	done
	$cmd
	exit 0
fi
if [ m$1 = m"create" ]; then
    if [ ! -d "/etc/ceph" ]; then
        mkdir -p /etc/ceph
    fi
    cd /etc/ceph
    m=`uuidgen`
    monmaptool --create --add 0 192.168.7.133:6789 --fsid $m monmap
    rm -fr /var/lib/ceph/*
    if [ ! -d "/var/lib/ceph" ]; then
        mkdir -p /var/lib/ceph
    fi
    mkdir -p /var/lib/ceph/mon/ceph-0
    ceph-authtool --create-keyring ceph.mon.keyring --gen-key -n mon. --cap mon 'allow *'
    ceph-authtool --create-keyring ceph.client.admin.keyring --gen-key -n client.admin --set-uid=0 --cap mon 'allow *' --cap osd 'allow *'
    ceph-authtool ceph.mon.keyring --import-keyring ceph.client.admin.keyring
    ceph-mon --mkfs -i 0 --monmap monmap --keyring ceph.mon.keyring
    mkdir -p /var/lib/ceph/osd/ceph-0
    ceph-osd -i 0 --mkfs
    ceph-mon -i 0
    ceph osd create
    ceph osd crush add osd.0 1.0 root=default host=ceph2
    ceph-osd -i 0
    ceph-mgr -i 0
fi
if [ m$1 = m"install" ]; then
	if [ ! -d "/usr/local/lib/ceph/erasure-code" ]; then
		mkdir -p /usr/local/lib/ceph/erasure-code
	fi
    if [ ! -d "/usr/local/lib/rados-classes" ]; then
        mkdir -p /usr/local/lib/rados-classes/
    fi
    install /home/me/codes/ceph/build/lib/libcls_rbd.so /usr/local/lib/rados-classes/libcls_rbd.so
    install /home/me/codes/ceph/build/lib/libcls_lock.so /usr/local/lib/rados-classes/libcls_locks.so
	install /home/me/codes/ceph/build/lib/libec_jerasure.so /usr/local/lib/ceph/erasure-code/libec_jerasure.so
	install /home/me/codes/ceph/build/lib/libec_lrc.so /usr/local/lib/ceph/erasure-code/libec_lrc.so
	install /home/me/codes/ceph/build/lib/libec_isa.so /usr/local/lib/ceph/erasure-code/libec_isa.so
	exit 0
fi
if [ m$1 = m"log" ]; then
	if [ $# -gt 1 ]; then
		file="/var/log/ceph/ceph-$2.log"
	else
		file="/var/log/ceph/ceph-osd.0.log"
	fi
	line=`grep -n "mmm" $file | tail -1 | cut -d ":" -f 1`
	awk '/123/{gsub("123", "");gsub("/home/me/codes/ceph/src/","");$3="";$4="";if(FNR>'$line'){print}}' $file
	exit 0
fi
if [ m$1 = m"make" ]; then
	cd /home/me/codes/ceph/build
	make -j12 >/dev/null
	if [ $? -ne 0 ]; then
		echo error
		exit 0
	fi
    install /home/me/codes/ceph/build/lib/libcls_rbd.so /usr/local/lib/rados-classes/libcls_rbd.so
    install /home/me/codes/ceph/build/lib/libcls_lock.so /usr/local/lib/rados-classes/libcls_locks.so
	install /home/me/codes/ceph/build/lib/libec_jerasure.so /usr/local/lib/ceph/erasure-code/libec_jerasure.so
	install /home/me/codes/ceph/build/lib/libec_lrc.so /usr/local/lib/ceph/erasure-code/libec_lrc.so
	install /home/me/codes/ceph/build/lib/libec_isa.so /usr/local/lib/ceph/erasure-code/libec_isa.so
	exit 0
fi
if [ m$1 = m"restart" ]; then
	pkill ceph-osd
	echo "wait osds exit"
	sleep 3
	tem=`pgrep ceph-osd`
	while [ "m$tem" != "m" ]
	do
		pkill ceph-osd
		sleep 3
		tem=`pgrep ceph-osd`
	done
	echo "restart the osds"
	ceph-osd -i 0 >/dev/null 2>&1
	sleep 3
	tem=`ceph -s | tail -n 8 | sed -n '1p' | awk '{print $4}'`
	if [ $tem = 0 ]; then
		echo "osds none start"
		exit 0
	fi
	echo "wait cluster status"
	tem=`ceph -s | tail -n 2 | sed -n '1p' | awk '{print $3}'`
	while [ "m$tem" != "mactive+clean" ]
	do
		tem=`ceph -s | tail -n 2 | sed -n '1p' | awk '{print $3}'`
		sleep 3
	done
fi
